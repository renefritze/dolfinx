name: Spack build

on:
  # Uncomment the below 'push' to trigger on push
  # push:
  #  branches:
  #    - "**"
  schedule:
    # '*' is a special character in YAML, so string must be quoted
    - cron: "0 2 * * THU"
  workflow_dispatch: ~

jobs:
  getspack:
    runs-on: ubuntu-20.04
    steps:
      - name: Get Spack
        uses: actions/checkout@v2
        with:
          path: ./spack
          ref: develop
          repository: spack/spack
      - uses: actions/cache@v2
        with:
          path: spack
          key: spack-files
  buildcpp:
    needs: getspack
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/cache@v2
        with:
          path: spack
          key: spack-files
      - run: ls
      - run: pwd
      - name: Build DOLFINx (C++) development version
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp-main
          spack env activate cpp-main
          spack add fenics-dolfinx@main
          spack install
      - name: Build DOLFINx (C++) release version
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create cpp-release
          spack env activate cpp-release
          spack add fenics-dolfinx
          spack install

  testcpp:
    runs-on: ubuntu-20.04
    needs: buildcpp
    strategy:
      matrix:
        branch: [[main, main], [v0.3.0, release]]
    steps:
      - uses: actions/cache@v2
        with:
          path: spack
          key: spack-files
      - name: Get DOLFINx code to access test files
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch[0] }}
          path: ./dolfinx-test
      - name: Create demo CMake files
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp-${{ matrix.branch[1] }}
          cd dolfinx-test/cpp/
          python cmake/scripts/generate-cmakefiles.py
      - name: Run a C++ test
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env activate cpp-${{ matrix.branch[1] }}
          cd dolfinx-test/cpp/demo/poisson
          ffcx poisson.ufl
          mkdir build-dir
          cd build-dir
          cmake ../
          export VERBOSE=1
          make -j2
          mpirun -np 2 ./demo_poisson

  buildpython:
    runs-on: ubuntu-20.04
    needs: buildcpp
    steps:
      - uses: actions/cache@v2
        with:
          path: spack
          key: spack-files
      - name: Build DOLFINx (Python, development)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py-main
          spack env activate py-main
          spack add py-fenics-dolfinx@main
          spack install
      - name: Build DOLFINx (Python, release version)
        run: |
          . ./spack/share/spack/setup-env.sh
          spack env create py-release
          spack env activate py-release
          spack add py-fenics-dolfinx
          spack install

  # testpython:
  #   runs-on: ubuntu-20.04
  #   needs: buildpython
  #   strategy:
  #     matrix:
  #       branch: [[main, main], [v0.3.0, release]]
  #   steps:
  #     # NOTE: numba is installed via pip because the spack package takes
  #     # an extremely long time to compile
  #     - name: Run DOLFINx (Python) tests
  #       run: |
  #         . ./spack/share/spack/setup-env.sh
  #         spack env activate py--${{ matrix.branch[1] }}
  #         pip install numba
  #         mpirun -np 2 python3 ./dolfinx-test/python/demo/stokes-taylor-hood/demo_stokes-taylor-hood.py
